{"id":"../node_modules/underscore/modules/_collectNonEnumProps.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337},{"name":"./_setup.js","loc":{"line":1,"column":45,"index":45},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_collectNonEnumProps.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_setup.js"},{"name":"./isFunction.js","loc":{"line":2,"column":23,"index":83},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_collectNonEnumProps.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\isFunction.js"},{"name":"./_has.js","loc":{"line":3,"column":16,"index":118},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_collectNonEnumProps.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_has.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = collectNonEnumProps;\nvar _setup = require(\"./_setup.js\");\nvar _isFunction = _interopRequireDefault(require(\"./isFunction.js\"));\nvar _has = _interopRequireDefault(require(\"./_has.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function (key) {\n      return hash[key] === true;\n    },\n    push: function (key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nfunction collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = _setup.nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (0, _isFunction.default)(constructor) && constructor.prototype || _setup.ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if ((0, _has.default)(obj, prop) && !keys.contains(prop)) keys.push(prop);\n  while (nonEnumIdx--) {\n    prop = _setup.nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}"},"sourceMaps":null,"error":null,"hash":"fc28ae8331b9046c905707d8c9bc9f9b","cacheData":{"env":{}}}