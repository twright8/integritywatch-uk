{"id":"../node_modules/underscore/modules/range.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = range;\n// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nfunction range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n  return range;\n}"},"sourceMaps":null,"error":null,"hash":"b22b87a7baba8c41551c5337369f5c2c","cacheData":{"env":{}}}