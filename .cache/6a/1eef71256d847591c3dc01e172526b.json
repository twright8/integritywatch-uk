{"id":"../node_modules/underscore/modules/_optimizeCb.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = optimizeCb;\n// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nfunction optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1:\n      return function (value) {\n        return func.call(context, value);\n      };\n    // The 2-argument case is omitted because weâ€™re not using it.\n    case 3:\n      return function (value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n    case 4:\n      return function (accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n  }\n  return function () {\n    return func.apply(context, arguments);\n  };\n}"},"sourceMaps":null,"error":null,"hash":"03538d4440348620a5ec14fd9543325a","cacheData":{"env":{}}}