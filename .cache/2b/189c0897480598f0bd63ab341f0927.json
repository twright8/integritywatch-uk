{"id":"../node_modules/d3-collection/src/nest.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-collection\\package.json","includedInParent":true,"mtime":1711627384288},{"name":"./map","loc":{"line":1,"column":16,"index":16},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-collection\\src\\nest.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-collection\\src\\map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _map = _interopRequireDefault(require(\"./map\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _default() {\n  var keys = [],\n    sortKeys = [],\n    sortValues,\n    rollup,\n    nest;\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n    var i = -1,\n      n = array.length,\n      key = keys[depth++],\n      keyValue,\n      value,\n      valuesByKey = (0, _map.default)(),\n      values,\n      result = createResult();\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n    valuesByKey.each(function (values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n    return result;\n  }\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array,\n      sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {\n      array.push({\n        key: k,\n        values: entries(v, depth)\n      });\n    });\n    return sortKey != null ? array.sort(function (a, b) {\n      return sortKey(a.key, b.key);\n    }) : array;\n  }\n  return nest = {\n    object: function (array) {\n      return apply(array, 0, createObject, setObject);\n    },\n    map: function (array) {\n      return apply(array, 0, createMap, setMap);\n    },\n    entries: function (array) {\n      return entries(apply(array, 0, createMap, setMap), 0);\n    },\n    key: function (d) {\n      keys.push(d);\n      return nest;\n    },\n    sortKeys: function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    },\n    sortValues: function (order) {\n      sortValues = order;\n      return nest;\n    },\n    rollup: function (f) {\n      rollup = f;\n      return nest;\n    }\n  };\n}\nfunction createObject() {\n  return {};\n}\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\nfunction createMap() {\n  return (0, _map.default)();\n}\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}"},"sourceMaps":null,"error":null,"hash":"87a4689d2dad17c16ca4420a3eff94ef","cacheData":{"env":{}}}