{"id":"../node_modules/underscore/modules/_createReduce.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337},{"name":"./_isArrayLike.js","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_createReduce.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_isArrayLike.js"},{"name":"./keys.js","loc":{"line":2,"column":17,"index":62},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_createReduce.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\keys.js"},{"name":"./_optimizeCb.js","loc":{"line":3,"column":23,"index":98},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_createReduce.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_optimizeCb.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createReduce;\nvar _isArrayLike = _interopRequireDefault(require(\"./_isArrayLike.js\"));\nvar _keys2 = _interopRequireDefault(require(\"./keys.js\"));\nvar _optimizeCb = _interopRequireDefault(require(\"./_optimizeCb.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Internal helper to create a reducing function, iterating left or right.\nfunction createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function (obj, iteratee, memo, initial) {\n    var _keys = !(0, _isArrayLike.default)(obj) && (0, _keys2.default)(obj),\n      length = (_keys || obj).length,\n      index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n  return function (obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, (0, _optimizeCb.default)(iteratee, context, 4), memo, initial);\n  };\n}"},"sourceMaps":null,"error":null,"hash":"76af73dbf9f86fcb76ac83b095d5b88c","cacheData":{"env":{}}}