{"id":"../node_modules/underscore/modules/memoize.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337},{"name":"./_has.js","loc":{"line":1,"column":16,"index":16},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\memoize.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_has.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = memoize;\nvar _has = _interopRequireDefault(require(\"./_has.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Memoize an expensive function by storing its results.\nfunction memoize(func, hasher) {\n  var memoize = function (key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!(0, _has.default)(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}"},"sourceMaps":null,"error":null,"hash":"eba84f86f6ea5821597a9945f64f66c8","cacheData":{"env":{}}}