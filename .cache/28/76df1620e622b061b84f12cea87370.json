{"id":"../node_modules/underscore/modules/partial.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337},{"name":"./restArguments.js","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\partial.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\restArguments.js"},{"name":"./_executeBound.js","loc":{"line":2,"column":25,"index":73},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\partial.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_executeBound.js"},{"name":"./underscore.js","loc":{"line":3,"column":14,"index":109},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\partial.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\underscore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _restArguments = _interopRequireDefault(require(\"./restArguments.js\"));\nvar _executeBound = _interopRequireDefault(require(\"./_executeBound.js\"));\nvar _underscore = _interopRequireDefault(require(\"./underscore.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = (0, _restArguments.default)(function (func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function () {\n    var position = 0,\n      length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return (0, _executeBound.default)(func, bound, this, this, args);\n  };\n  return bound;\n});\npartial.placeholder = _underscore.default;\nvar _default = exports.default = partial;"},"sourceMaps":null,"error":null,"hash":"c26ce93a40c691c1dcccbe8896bda691","cacheData":{"env":{}}}