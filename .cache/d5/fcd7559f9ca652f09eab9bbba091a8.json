{"id":"../node_modules/underscore/modules/unzip.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1711629289137},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1711627388337},{"name":"./max.js","loc":{"line":1,"column":16,"index":16},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\unzip.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\max.js"},{"name":"./_getLength.js","loc":{"line":2,"column":22,"index":50},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\unzip.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\_getLength.js"},{"name":"./pluck.js","loc":{"line":3,"column":18,"index":87},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\unzip.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\underscore\\modules\\pluck.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unzip;\nvar _max = _interopRequireDefault(require(\"./max.js\"));\nvar _getLength = _interopRequireDefault(require(\"./_getLength.js\"));\nvar _pluck = _interopRequireDefault(require(\"./pluck.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nfunction unzip(array) {\n  var length = array && (0, _max.default)(array, _getLength.default).length || 0;\n  var result = Array(length);\n  for (var index = 0; index < length; index++) {\n    result[index] = (0, _pluck.default)(array, index);\n  }\n  return result;\n}"},"sourceMaps":null,"error":null,"hash":"1564f6d8e02f24f1342ad1f585c0e831","cacheData":{"env":{}}}